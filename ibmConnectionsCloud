読者

⇒システム設計者と承認者(部長)

・業務システム

⇒キャッシュレスシステム

・入り口

⇒企業は国からDXの推進を求められている[1]

・変化に対応しながらデリバリースピードを高めたサービスを提供していく必要がある

・レガシーシステムの維持管理費に9割が費やされている、手をこまねいて待ち続けますか。

その9割を投資に向けて最新技術を取り入れることがDXを成功させる鍵になるのでは。

・仮説

⇒①サーバレスを適用することで、ビジネスのスピードが速くなるのか

(開発のスピード(各工程別)とリリース後の保守のスピード)

【要件定義】

機能要件

品質の高いモックアップを短期間で生成できる

(機能、業務のユースケースが明確になることで、テストの品質もあがるのでは)

非機能要件

設計項目が少なくなる

(冗長化、ネットワーク構成等が不要に)

【構築】

テンプレートや運用の仕組みを整備しておけば、作業が減る。

【製造】

構築と同様。

【テスト】

単体：コードとテストコードを同時に生成することで、テスト実行が自動化

すべてコード化されているため仕様書もいらない

結合：システム内テストはある程度自動化可能(単体と同様)

システムテスト：結合テストで担保されているため、原則不要(要件によっては要)

：ベースの運用に対するテストは不要。運用スケジュールに関するテストは要

ユーザ受け入れテスト：なし

移行：リリース可否の判断だけでよい

⇒②変化に迅速に対応できるデリバリースピードを出せるか

・前提

⇒サーバレスの定義はサーバを持たないこと(フルマネージドサービス)とする。

⇒攻めのIT活用方針の中で記載されている、置き換えステージと効率化ステージ(※)を既に

実施している企業がサーバレスに取り組むことができる。[2]

※データの共通利用化(API化など)

→データの保管場所が部門別、拠点別、システム別とサイロ化し、視える化できていない。

また、データへのアクセス方法がシステムごとに異なるため、使いたいときにすぐに利用できない課題がある

⇒サーバレス(クラウドサービスを使用することで)ビジネスのどこの工程が早くなるのか？

そもそもdevopsの思想に基づいて各クラウドサービスは設計されているため、クラウドサービスを使用することで

開発スピードがあがるのは当然(テストの自動化等)。

⇒ サーバレスを用いてビジネスのスピードを加速させるためには、ある程度の積み重ね(技術者の育成等)が必要になる。(投資してください)

⇒既存システムは定型運用を自動化する。(保守の効率化)

→簡単に実現する方法がCI/CD

⇒イノベーション：必要な時に必要な分購入して利用する。(最新のサービス(クラウド))

⇒複雑なビジネスロジックを実現するのは短期間では無理。

既に存在するビジネスロジックを呼び出す処理の作成が最大限にメリットを享受できる。

(あらかじめ呼び出せる形に整理しておく)

⇒IDPはあらかじめ決めておく。

・サーバレスを実施していく上での戦略

⇒①UIの共通化(SPA上でのフレームワーク共通化)

⇒②サーバレスの監視運用(システム運用、業務処理時間、コストなど)

⇒③開発手法(アジャイル)

⇒④疎結合なサービスにする

・仮説検証方法

⇒仮説①：無料枠を用いた実記検証
